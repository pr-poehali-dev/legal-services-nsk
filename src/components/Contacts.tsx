import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import Icon from "@/components/ui/icon";
import { useState } from "react";

const Contacts = () => {
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    subject: '',
    message: '',
    consent: false
  });
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value, type } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value
    }));
  };

  const sendToWhatsApp = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.name || !formData.phone || !formData.message || !formData.consent) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∏ –¥–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö');
      return;
    }

    setIsSubmitting(true);

    try {
      // Green API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      const idInstance = '1103279953';
      const apiTokenInstance = '****************************************************'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
      const chatId = '79994523500@c.us'; // –ù–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è

      const message = `üÜï –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞:

üë§ –ò–º—è: ${formData.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
${formData.email ? `üìß Email: ${formData.email}` : ''}
${formData.subject ? `üìã –¢–µ–º–∞: ${formData.subject}` : ''}

üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:
${formData.message}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;

      const response = await fetch(`https://1103.api.green-api.com/waInstance${idInstance}/sendMessage/${apiTokenInstance}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chatId: chatId,
          message: message
        })
      });

      if (response.ok) {
        alert('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        setFormData({
          name: '',
          phone: '',
          email: '',
          subject: '',
          message: '',
          consent: false
        });
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é.');
    } finally {
      setIsSubmitting(false);
    }
  };

  const contactInfo = [
    {
      icon: "Phone",
      title: "–¢–µ–ª–µ—Ñ–æ–Ω",
      value: "+7 (999) 452 35 00",
      link: "tel:+79994523500",
    },
    {
      icon: "Mail",
      title: "Email",
      value: "vituarten@icloud.com",
      link: "mailto:vituarten@icloud.com",
    },
    {
      icon: "MapPin",
      title: "–ê–¥—Ä–µ—Å",
      value: "–≥. –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 3, –æ—Ñ–∏—Å 323",
      link: "#",
    },
    {
      icon: "Clock",
      title: "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã",
      value: "–ü–Ω-–ü—Ç: 9:00-18:00, –°–±: 10:00-15:00",
      link: "#",
    },
  ];

  return (
    <section id="contacts" className="py-20 bg-background">
      <div className="container mx-auto px-4">
        <div className="text-center space-y-4 mb-16">
          <h2 className="text-3xl lg:text-4xl font-bold text-foreground">
            –ö–æ–Ω—Ç–∞–∫—Ç—ã
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12">
          {/* Contact Info */}
          <div className="space-y-8">
            <div className="grid sm:grid-cols-2 gap-6">
              {contactInfo.map((info, index) => (
                <Card key={index} className="border-border">
                  <CardContent className="p-6">
                    <div className="flex items-start space-x-4">
                      <div className="w-12 h-12 bg-primary/20 rounded-lg flex items-center justify-center">
                        <Icon
                          name={info.icon}
                          className="h-6 w-6 text-primary"
                        />
                      </div>
                      <div className="space-y-1">
                        <div className="font-semibold text-foreground">
                          {info.title}
                        </div>
                        {info.link !== "#" ? (
                          <a
                            href={info.link}
                            className="text-muted-foreground hover:text-primary transition-colors duration-200"
                          >
                            {info.value}
                          </a>
                        ) : (
                          <div className="text-muted-foreground text-sm">
                            {info.value}
                          </div>
                        )}
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            {/* Yandex Map */}
            <Card className="border-border">
              <CardContent className="p-0">
                <div className="aspect-video rounded-lg overflow-hidden">
                  <iframe
                    src="https://yandex.ru/map-widget/v1/?ll=82.920430%2C55.030204&z=11&l=map&pt=82.920430%2C55.030204,pm2rdm"
                    width="100%"
                    height="100%"
                    frameBorder="0"
                    style={{ minHeight: '300px' }}
                    title="–ö–∞—Ä—Ç–∞ –æ—Ñ–∏—Å–∞ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ"
                    loading="lazy"
                    allowFullScreen
                  />
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Contact Form */}
          <Card className="border-border">
            <CardHeader>
              <CardTitle className="text-xl">–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</CardTitle>
              <p className="text-muted-foreground">
                –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞
              </p>
            </CardHeader>
            <CardContent className="space-y-6">
              <form onSubmit={sendToWhatsApp} className="space-y-6">
                <div className="grid sm:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium">–ò–º—è *</label>
                    <Input 
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      placeholder="–í–∞—à–µ –∏–º—è" 
                      required
                    />
                  </div>
                  <div className="space-y-2">
                    <label className="text-sm font-medium">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                    <Input 
                      name="phone"
                      value={formData.phone}
                      onChange={handleInputChange}
                      placeholder="+7 (___) ___-__-__" 
                      required
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium">Email</label>
                  <Input 
                    name="email"
                    type="email" 
                    value={formData.email}
                    onChange={handleInputChange}
                    placeholder="your@email.com" 
                  />
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium">–¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è</label>
                  <Input 
                    name="subject"
                    value={formData.subject}
                    onChange={handleInputChange}
                    placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –≤–æ–ø—Ä–æ—Å–∞" 
                  />
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium">–°–æ–æ–±—â–µ–Ω–∏–µ *</label>
                  <Textarea
                    name="message"
                    value={formData.message}
                    onChange={handleInputChange}
                    placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –∏–ª–∏ –≤–æ–ø—Ä–æ—Å..."
                    className="min-h-[120px]"
                    required
                  />
                </div>

                <div className="flex items-start space-x-2">
                  <input 
                    type="checkbox" 
                    name="consent"
                    checked={formData.consent}
                    onChange={handleInputChange}
                    className="mt-1" 
                    id="consent" 
                    required
                  />
                  <label
                    htmlFor="consent"
                    className="text-sm text-muted-foreground"
                  >
                    –Ø —Å–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å
                    –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                  </label>
                </div>

                <Button
                  type="submit"
                  disabled={isSubmitting}
                  className="w-full bg-primary hover:bg-primary/90"
                  size="lg"
                >
                  {isSubmitting ? (
                    <>
                      <Icon name="Loader2" className="h-5 w-5 mr-2 animate-spin" />
                      –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...
                    </>
                  ) : (
                    <>
                      <Icon name="Send" className="h-5 w-5 mr-2" />
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                    </>
                  )}
                </Button>

                <div className="text-center text-sm text-muted-foreground">
                  <Icon name="Shield" className="h-4 w-4 inline mr-1" />
                  –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
                </div>
              </form>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
};

export default Contacts;